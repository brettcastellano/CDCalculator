/*
 Calculates years required to reach inputted CD value, given users
 inputted initial investment and annual interest rate
 Brett Castellano
 April 11, 2017
 */

/**
 *
 * @author Brett
 */
public class Frame extends javax.swing.JFrame {

    /**
     * Creates new form Frame
     */
    public Frame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Title = new javax.swing.JLabel();
        InitialInvPrompt = new javax.swing.JLabel();
        annualIntPrompt = new javax.swing.JLabel();
        endValuePrompt = new javax.swing.JLabel();
        initialInvVal = new javax.swing.JTextField();
        annualIntVal = new javax.swing.JTextField();
        endValueVal = new javax.swing.JTextField();
        calculate = new javax.swing.JButton();
        sentence = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Title.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        Title.setText("CD Calculator");

        InitialInvPrompt.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        InitialInvPrompt.setText("Enter initial investment ($):");

        annualIntPrompt.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        annualIntPrompt.setText("Enter annual interest rate (%):");

        endValuePrompt.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        endValuePrompt.setText("Enter ending value ($):");

        calculate.setText("Calculate!");
        calculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateActionPerformed(evt);
            }
        });
        calculate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                calculateKeyPressed(evt);
            }
        });

        sentence.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        sentence.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(Title))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(InitialInvPrompt)
                            .addComponent(annualIntPrompt)
                            .addComponent(endValuePrompt))
                        .addGap(78, 78, 78)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(calculate, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(initialInvVal)
                            .addComponent(annualIntVal)
                            .addComponent(endValueVal)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(sentence, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(81, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Title)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(InitialInvPrompt)
                    .addComponent(initialInvVal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(annualIntPrompt)
                    .addComponent(annualIntVal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(endValuePrompt)
                    .addComponent(endValueVal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(calculate)
                .addGap(27, 27, 27)
                .addComponent(sentence, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void calculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateActionPerformed
        /* declare all variables */
        double investment;
        double interestRate;
        double endValue;
        int years = 0;

        /* Obtain values from user */
        investment = Double.parseDouble(initialInvVal.getText());
        interestRate = Double.parseDouble(annualIntVal.getText());
        endValue = Double.parseDouble(endValueVal.getText());

        /* Convert interest rate to % */
        interestRate /= 100;

        /*use formula and add years until we reach end goal */
        while (investment < endValue) {
            investment = investment + (investment * interestRate);
            years++;

            /* final sentence for years required */
            sentence.setText("The number of years required is " + years);
        }
    }//GEN-LAST:event_calculateActionPerformed

    private void calculateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_calculateKeyPressed

    }//GEN-LAST:event_calculateKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel InitialInvPrompt;
    private javax.swing.JLabel Title;
    private javax.swing.JLabel annualIntPrompt;
    private javax.swing.JTextField annualIntVal;
    private javax.swing.JButton calculate;
    private javax.swing.JLabel endValuePrompt;
    private javax.swing.JTextField endValueVal;
    private javax.swing.JTextField initialInvVal;
    private javax.swing.JLabel sentence;
    // End of variables declaration//GEN-END:variables
}
